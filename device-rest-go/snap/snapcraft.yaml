name: edgex-device-rest
base: core18
type: app
adopt-info: version
license: Apache-2.0
title: EdgeX REST Device Service
summary: EdgeX device service for REST protocol
description: |
  This device service provides easy way for 3'rd party applications, 
  such as Point of Sale, CV Analytics, etc., to push data into EdgeX 
  via the REST protocol.

# delhi: 0, edinburgh: 1, fuji: 2, geneva: 3
epoch: 3

# TODO: add armhf here when that's supported
architectures:
  - build-on: arm64
  - build-on: amd64

grade: stable
confinement: strict

apps:
  device-rest-go:
    adapter: none
    command: bin/device-rest-go $CONFIG_PRO_ARG $CONF_ARG $REGISTRY_ARG
    command-chain:
      - bin/startup-env-var.sh
    daemon: simple
    environment:
      CONFIG_PRO_ARG: "--cp=consul://localhost:8500"
      CONF_ARG: "--confdir=$SNAP_DATA/config/device-rest-go/res"
      REGISTRY_ARG: "--registry"
      DEVICE_PROFILESDIR: "$SNAP_DATA/config/device-rest-go/res"
    plugs: [network, network-bind]

parts:
  version:
    plugin: nil
    source: snap/local
    override-pull: |
      cd $SNAPCRAFT_PROJECT_DIR
      if [ -f VERSION ]; then
        PROJECT_VERSION=$(cat VERSION)
      else
        PROJECT_VERSION="0.0.0"
      fi
      snapcraftctl set-version ${PROJECT_VERSION}
  go:
    plugin: nil
    source: snap/local
    build-packages: [curl]
    override-build: |
      # use dpkg architecture to figure out our target arch
      # note - we specifically don't use arch
      case "$(dpkg --print-architecture)" in
        amd64)
          FILE_NAME=go1.15.2.linux-amd64.tar.gz
          FILE_HASH=b49fda1ca29a1946d6bb2a5a6982cf07ccd2aba849289508ee0f9918f6bb4552
          ;;
        arm64)
          FILE_NAME=go1.15.2.linux-arm64.tar.gz
          FILE_HASH=c8ec460cc82d61604b048f9439c06bd591722efce5cd48f49e19b5f6226bd36d
          ;;
        armhf)
          FILE_NAME=go1.15.2.linux-armv6l.tar.gz
          FILE_HASH=c12e2afdcb21e530d332d4994919f856dd2a676e9d67034c7d6fefcb241412d9
          ;;
        i386)
          FILE_NAME=go1.15.2.linux-386.tar.gz
          FILE_HASH=5a91080469df6b91f1022bdfb0ca75e01ca50387950b13518def3d0a7f6af9f1
          ;;
      esac
      # download the archive, failing on ssl cert problems
      curl https://dl.google.com/go/$FILE_NAME -O
      echo "$FILE_HASH $FILE_NAME" > sha256
      sha256sum -c sha256 | grep OK
      tar -C $SNAPCRAFT_STAGE -xf go*.tar.gz --strip-components=1
    prime:
      - "-*"

  device-rest-go:
    source: .
    plugin: make
    build-packages: [git]
    after: [go]
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      make build

      install -DT "./cmd/device-rest-go" "$SNAPCRAFT_PART_INSTALL/bin/device-rest-go"

      install -d "$SNAPCRAFT_PART_INSTALL/config/device-rest-go/res/"

      cat "./cmd/res/configuration.toml" | \
        sed -e s:\"./device-rest-go.log\":\'\$SNAP_COMMON/device-rest-go.log\': \
        -e s:'ProfilesDir = \"./res\"':'ProfilesDir = \"\$SNAP_DATA/config/device-rest-go/res\"': > \
        "$SNAPCRAFT_PART_INSTALL/config/device-rest-go/res/configuration.toml"

      for fpath in ./cmd/res/*.yaml; do
          fname=$(basename "$fpath")
          install -DT "./cmd/res/${fname}" \
          "$SNAPCRAFT_PART_INSTALL/config/device-rest-go/res/${fname}"
      done

      install -DT "./Attribution.txt" \
         "$SNAPCRAFT_PART_INSTALL/usr/share/doc/device-rest-go/Attribution.txt"
      install -DT "./LICENSE" \
         "$SNAPCRAFT_PART_INSTALL/usr/share/doc/device-rest-go/LICENSE"

  config-common:
    plugin: dump
    source: snap/local/runtime-helpers
