networks:
  edgex-network:
    driver: bridge
services:
  app-service-rules:
    container_name: edgex-app-service-configurable-rules
    depends_on:
      consul:
        condition: service_started
      data:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      BINDING_PUBLISHTOPIC: rules-events
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_PROFILE: rules-engine-mqtt
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEBUS_PUBLISHHOST_HOST: edgex-mqtt-broker
      MESSAGEBUS_SUBSCRIBEHOST_HOST: edgex-mqtt-broker
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-app-service-configurable-rules
      SERVICE_PORT: 48100
    hostname: edgex-app-service-configurable-rules
    image: edgexfoundry/docker-app-service-configurable:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 48100:48100/tcp
    read_only: true
  command:
    container_name: edgex-core-command
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
      metadata:
        condition: service_started
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-core-command
    hostname: edgex-core-command
    image: edgexfoundry/docker-core-command-go:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 48082:48082/tcp
    read_only: true
  consul:
    container_name: edgex-core-consul
    environment:
      EDGEX_DB: redis
      EDGEX_SECURE: "false"
    hostname: edgex-core-consul
    image: edgexfoundry/docker-edgex-consul:1.3.0
    networks:
      edgex-network: {}
    ports:
    - 8500:8500/tcp
    read_only: true
    volumes:
    - consul-config:/consul/config:z
    - consul-data:/consul/data:z
    - consul-scripts:/consul/scripts:z
  data:
    container_name: edgex-core-data
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
      metadata:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEQUEUE_HOST: edgex-mqtt-broker
      MESSAGEQUEUE_OPTIONAL_CLIENTID: edgex-core-data
      MESSAGEQUEUE_PORT: 1883
      MESSAGEQUEUE_TYPE: mqtt
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-core-data
    hostname: edgex-core-data
    image: edgexfoundry/docker-core-data-go:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 5563:5563/tcp
    - 48080:48080/tcp
    read_only: true
  database:
    container_name: edgex-redis
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
    hostname: edgex-redis
    image: redis:6.0.9-alpine
    networks:
      edgex-network: {}
    ports:
    - 6379:6379/tcp
    read_only: true
    volumes:
    - db-data:/data:z
  # device-mqtt:
  #   container_name: edgex-device-mqtt
  #   depends_on:
  #     consul:
  #       condition: service_started
  #     data:
  #       condition: service_started
  #     metadata:
  #       condition: service_started
  #   environment:
  #     CLIENTS_COMMAND_HOST: edgex-core-command
  #     CLIENTS_COREDATA_HOST: edgex-core-data
  #     CLIENTS_DATA_HOST: edgex-core-data
  #     CLIENTS_METADATA_HOST: edgex-core-metadata
  #     CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
  #     CLIENTS_RULESENGINE_HOST: edgex-kuiper
  #     CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
  #     CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
  #     DATABASES_PRIMARY_HOST: edgex-redis
  #     DRIVER_INCOMINGHOST: edgex-mqtt-broker
  #     DRIVER_RESPONSEHOST: edgex-mqtt-broker
  #     EDGEX_SECURITY_SECRET_STORE: "false"
  #     REGISTRY_HOST: edgex-core-consul
  #     SERVICE_HOST: edgex-device-mqtt
  #   hostname: edgex-device-mqtt
  #   image: edgexfoundry/docker-device-mqtt-go:1.3.1
  #   networks:
  #     edgex-network: {}
  #   ports:
  #   - 49982:49982/tcp
  #   read_only: true
  # device-rest:
  #   container_name: edgex-device-rest
  #   depends_on:
  #     consul:
  #       condition: service_started
  #     data:
  #       condition: service_started
  #     metadata:
  #       condition: service_started
  #   environment:
  #     CLIENTS_COMMAND_HOST: edgex-core-command
  #     CLIENTS_COREDATA_HOST: edgex-core-data
  #     CLIENTS_DATA_HOST: edgex-core-data
  #     CLIENTS_METADATA_HOST: edgex-core-metadata
  #     CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
  #     CLIENTS_RULESENGINE_HOST: edgex-kuiper
  #     CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
  #     CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
  #     DATABASES_PRIMARY_HOST: edgex-redis
  #     EDGEX_SECURITY_SECRET_STORE: "false"
  #     REGISTRY_HOST: edgex-core-consul
  #     SERVICE_HOST: edgex-device-rest
  #   hostname: edgex-device-rest
  #   image: edgexfoundry/docker-device-rest-go:1.2.1
  #   networks:
  #     edgex-network: {}
  #   ports:
  #   - 49986:49986/tcp
  #   read_only: true
  metadata:
    container_name: edgex-core-metadata
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
      notifications:
        condition: service_started
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      NOTIFICATIONS_SENDER: edgex-core-metadata
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-core-metadata
    hostname: edgex-core-metadata
    image: edgexfoundry/docker-core-metadata-go:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 48081:48081/tcp
    read_only: true
  mqtt-broker:
    container_name: edgex-mqtt-broker
    hostname: edgex-mqtt-broker
    image: eclipse-mosquitto:1.6.3
    networks:
      edgex-network: {}
    ports:
    - published: 1883
      target: 1883
    read_only: true
    security_opt:
    - no-new-privileges:true
  notifications:
    container_name: edgex-support-notifications
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-support-notifications
    hostname: edgex-support-notifications
    image: edgexfoundry/docker-support-notifications-go:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 48060:48060/tcp
    read_only: true
  rulesengine:
    container_name: edgex-kuiper
    depends_on:
      app-service-rules:
        condition: service_started
      mqtt-broker:
        condition: service_started
    environment:
      EDGEX__DEFAULT__OPTIONAL__CLIENTID: kuiper-rules-engine
      EDGEX__DEFAULT__PORT: 1883
      EDGEX__DEFAULT__PROTOCOL: tcp
      EDGEX__DEFAULT__SERVER: edgex-mqtt-broker
      EDGEX__DEFAULT__SERVICESERVER: http://edgex-core-data:48080
      EDGEX__DEFAULT__TOPIC: rules-events
      EDGEX__DEFAULT__TYPE: mqtt
      KUIPER__BASIC__CONSOLELOG: "true"
      KUIPER__BASIC__RESTPORT: 48075
    hostname: edgex-kuiper
    image: emqx/kuiper:1.1.1-alpine
    networks:
      edgex-network: {}
    ports:
    - 20498:20498/tcp
    - 48075:48075/tcp
  scheduler:
    container_name: edgex-support-scheduler
    depends_on:
      consul:
        condition: service_started
      database:
        condition: service_started
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      INTERVALACTIONS_SCRUBAGED_HOST: edgex-core-data
      INTERVALACTIONS_SCRUBPUSHED_HOST: edgex-core-data
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-support-scheduler
    hostname: edgex-support-scheduler
    image: edgexfoundry/docker-support-scheduler-go:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 48085:48085/tcp
    read_only: true
  system:
    container_name: edgex-sys-mgmt-agent
    depends_on:
      command:
        condition: service_started
      consul:
        condition: service_started
      data:
        condition: service_started
      metadata:
        condition: service_started
      notifications:
        condition: service_started
      scheduler:
        condition: service_started
    environment:
      CLIENTS_COMMAND_HOST: edgex-core-command
      CLIENTS_COREDATA_HOST: edgex-core-data
      CLIENTS_DATA_HOST: edgex-core-data
      CLIENTS_METADATA_HOST: edgex-core-metadata
      CLIENTS_NOTIFICATIONS_HOST: edgex-support-notifications
      CLIENTS_RULESENGINE_HOST: edgex-kuiper
      CLIENTS_SCHEDULER_HOST: edgex-support-scheduler
      CLIENTS_VIRTUALDEVICE_HOST: edgex-device-virtual
      DATABASES_PRIMARY_HOST: edgex-redis
      EDGEX_SECURITY_SECRET_STORE: "false"
      EXECUTORPATH: /sys-mgmt-executor
      METRICSMECHANISM: executor
      REGISTRY_HOST: edgex-core-consul
      SERVICE_HOST: edgex-sys-mgmt-agent
    hostname: edgex-sys-mgmt-agent
    image: edgexfoundry/docker-sys-mgmt-agent-go:1.3.1
    networks:
      edgex-network: {}
    ports:
    - 48090:48090/tcp
    read_only: true
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:z
version: '3.7'
volumes:
  consul-config: {}
  consul-data: {}
  consul-scripts: {}
  db-data: {}
  log-data: {}

